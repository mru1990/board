<?php

/**
 * BaseCustomer
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $category_id
 * @property string $type
 * @property string $name
 * @property string $logo
 * @property string $url
 * @property string $street
 * @property string $zip
 * @property string $city
 * @property string $description
 * @property string $token
 * @property boolean $is_public
 * @property boolean $is_activated
 * @property string $email
 * @property CustomerCategory $CustomerCategory
 * 
 * @method integer          getCategoryId()       Returns the current record's "category_id" value
 * @method string           getType()             Returns the current record's "type" value
 * @method string           getName()             Returns the current record's "name" value
 * @method string           getLogo()             Returns the current record's "logo" value
 * @method string           getUrl()              Returns the current record's "url" value
 * @method string           getStreet()           Returns the current record's "street" value
 * @method string           getZip()              Returns the current record's "zip" value
 * @method string           getCity()             Returns the current record's "city" value
 * @method string           getDescription()      Returns the current record's "description" value
 * @method string           getToken()            Returns the current record's "token" value
 * @method boolean          getIsPublic()         Returns the current record's "is_public" value
 * @method boolean          getIsActivated()      Returns the current record's "is_activated" value
 * @method string           getEmail()            Returns the current record's "email" value
 * @method CustomerCategory getCustomerCategory() Returns the current record's "CustomerCategory" value
 * @method Customer         setCategoryId()       Sets the current record's "category_id" value
 * @method Customer         setType()             Sets the current record's "type" value
 * @method Customer         setName()             Sets the current record's "name" value
 * @method Customer         setLogo()             Sets the current record's "logo" value
 * @method Customer         setUrl()              Sets the current record's "url" value
 * @method Customer         setStreet()           Sets the current record's "street" value
 * @method Customer         setZip()              Sets the current record's "zip" value
 * @method Customer         setCity()             Sets the current record's "city" value
 * @method Customer         setDescription()      Sets the current record's "description" value
 * @method Customer         setToken()            Sets the current record's "token" value
 * @method Customer         setIsPublic()         Sets the current record's "is_public" value
 * @method Customer         setIsActivated()      Sets the current record's "is_activated" value
 * @method Customer         setEmail()            Sets the current record's "email" value
 * @method Customer         setCustomerCategory() Sets the current record's "CustomerCategory" value
 * 
 * @package    board
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCustomer extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('customer');
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('type', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('logo', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('street', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('zip', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('city', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('is_activated', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CustomerCategory', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}